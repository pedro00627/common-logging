plugins {
    id 'java-library'
    id 'maven-publish'
}

group = 'com.github.pedro00627'
version = '1.0.8'
description = 'Universal logging configuration library for Spring Boot applications'

repositories {
    mavenCentral()
}

dependencies {
    // Actualizar la versiÃ³n del BOM de Spring Boot para que coincida con el microservicio
    api platform('org.springframework.boot:spring-boot-dependencies:3.5.4')

    // Incluir el starter de Log4j2 y excluir el starter de logging por defecto (Logback)
    api('org.springframework.boot:spring-boot-starter-log4j2')
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
        vendor.set(JvmVendorSpec.ADOPTIUM)
    }
    withSourcesJar()
    withJavadocJar()
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(tasks.named('jar'))
            artifact(tasks.named('sourcesJar'))
            artifact(tasks.named('javadocJar'))

            pom {
                name.set('Common Logging')
                description.set('Universal logging configuration library for Spring Boot applications')
                url.set('https://github.com/pedro00627/common-logging')

                licenses {
                    license {
                        name.set('MIT License')
                        url.set('https://opensource.org/licenses/MIT')
                    }
                }

                developers {
                    developer {
                        id.set('pedro00627')
                        name.set('Pedro')
                        email.set('pedro00627@users.noreply.github.com')
                    }
                }

                scm {
                    connection.set('scm:git:git://github.com/pedro00627/common-logging.git')
                    developerConnection.set('scm:git:ssh://github.com/pedro00627/common-logging.git')
                    url.set('https://github.com/pedro00627/common-logging')
                }
            }
        }
    }

    repositories {
        maven {
            name = "localMaven"
            url = uri(new File(System.getProperty('user.home'), '.m2/repository').toURI())
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/pedro00627/common-logging")
            credentials { creds ->
                creds.username = System.getenv("GITHUB_ACTOR")
                creds.password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}